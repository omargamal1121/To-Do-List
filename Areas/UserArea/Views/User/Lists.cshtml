@using To_Do_List.Areas.UserArea.Models
@using To_Do_List.Areas.UserArea.Repository
@inject IMainCategoryRepository _mainCategoryRepository
@model IEnumerable<SubCategory>
@{
    ViewData["Title"] = "Lists";
}

<div class="d-flex mb-4 justify-content-center">

    <form asp-action="ChangeName" asp-route-CategoryId="@ViewBag.categoryid">
        <input name="CategoryName" type="text" class=" text-li border-0 form-control rounded-2 bg-transparent text-center fs-3 text-light " id="floatingInputValue" value="@_mainCategoryRepository.GetName(ViewBag.categoryid)">
    </form>
</div>

@if (TempData["mess"] is not null)
{
    if (TempData["mess"].Equals("Updated") || TempData["mess"].Equals("Added"))
    {
        <script type="text/javascript">
            toastr.success('','@TempData["mess"] :)')
        </script>
    }
    else
    {
        <script type="text/javascript">
            toastr.error('','@TempData["mess"]')
        </script>
    }
}

<div class="Create">
    <form asp-action="Createlist" asp-route-categoryId="@ViewBag.categoryid">
      
        <input name="name" class="Namefield"
               value="@(TempData["name"] ?? "")" type="text"
               placeholder="Enter List Name" />
    </form>

</div>
@if (Model is not null && Model.Count()>0)
{
    <div class="AllCard">
        @foreach (var c in Model)
        {
            <div class="Categorycard">
                <div class="d-flex justify-content-between">
                    <h3>@c.Name  </h3>
                    <a asp-action="DeleteList" asp-route-id="@c.Id"><i class="fa-solid fa-trash fs-4 text-danger"></i></a>
                </div>
                    <h6>Created Time: @c.CreatTime</h6>

          
                    <hr />
                <a asp-action="tasks" asp-route-SubCategoryId="@c.Id" class="card-body-lists">
                    <div class="Tasksdiv">
                        <h3>Tasks</h3>
                        @if (c.Tasks is null || c.Tasks.Count == 0)
                        {
                            <h6>No Tasks :(</h6>
                        }
                        else
                        {

                            @foreach (var sc in c.Tasks)
                            {

                                if (@sc.IsComplete)
                                {
                                    <div class="taskdetails">
                                        <p><strong>@sc.Name:</strong> <i class="fa-regular fa-circle-check"></i></p>
                                    </div>
                                }
                                else
                                {
                                    <div class="task-details">
                                        <p><strong>@sc.Name:</strong> <i class="fa-solid fa-circle-xmark"></i></p>
                                    </div>
                                }
                            }
                        }
                    </div>
                </a>
                @if(c is not null && c.Tasks.Count!=0)
                {
                    int totalTasks = c.Tasks.Count();
                    int completedTasks = c.Tasks.Where(t => t.IsComplete).Count();


                    @if (totalTasks > 0 && completedTasks * 100 / totalTasks < 25)
                    {
                        <style>
                            .progress-bar-fill {
                                background-color: #e72e2e;
                            }
                        </style>

                    }
                    else if (totalTasks > 0 && (completedTasks * 100 / totalTasks >= 25 && completedTasks * 100 / totalTasks < 50))
                    {
                        <style>
                            .progress-bar-fill {
                                background-color: #c4e123;
                            }
                        </style>

                    }
                    <div class="progress-container">
                        <div class="progress-label">Tasks Progress:</div>
                        <div class="progress-bar">
                            <div class="progress-bar-fill" style="width: @(totalTasks > 0 ? completedTasks * 100 / totalTasks : 0)%;"></div>
                        </div>
                    </div>
                }

            </div>
        }
    </div>
}
else
{
    <h4 class="text-light">Add Plans to do it today like name of coures or something</h4>
}

<div class="mt-4">
    <a asp-action="Index" class="btn btn-primary">Back To Category</a>
</div>

<style>
    body {
        background: linear-gradient(to left, #2c3e50, #4ca1af);

    }

    .Categorycard
    {
        background: linear-gradient(to top, #165aa1, #ffffff);
    }
</style>